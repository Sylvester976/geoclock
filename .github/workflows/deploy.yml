name: Deploy to Render and Notify GitHub

on:
  push:
    branches:
      - main  # Change this if you deploy from another branch

jobs:
  render-deploy:
    runs-on: ubuntu-latest

    steps:
      # Optional: checkout repo
      # - name: Checkout repository
      #   uses: actions/checkout@v4

      - name: Notify GitHub of Deployment
        id: deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ secrets.DEPLOY_PAT }}
          environment: production
          description: "Starting deployment to Render"
          transient_environment: true
          auto_inactive: true

      - name: Trigger Render Deploy and Capture ID
        id: render
        run: |
          echo "Triggering Render deploy..."
          response=$(curl -s -X POST https://api.render.com/deploy/srv-d1hs5cripnbc73fk74tg?key=Rrw8YHhuRYI)
          echo "Response: $response"
          deploy_id=$(echo "$response" | jq -r '.deploy.id')
          echo "RENDER_DEPLOY_ID=$deploy_id" >> $GITHUB_ENV

      - name: Wait for Render Deploy to Complete
        run: |
          echo "Waiting for Render deployment to finish..."
          for i in {1..20}; do
            status=$(curl -s -H "Authorization: Bearer Rrw8YHhuRYI" \
              https://api.render.com/v1/deploys/$RENDER_DEPLOY_ID | jq -r '.status')
            echo "[$i] Status: $status"
            if [[ "$status" == "live" ]]; then
              echo "✅ Render deployment successful"
              exit 0
            elif [[ "$status" == "build_failed" || "$status" == "update_failed" ]]; then
              echo "❌ Render deployment failed"
              exit 1
            fi
            sleep 10
          done
          echo "⏱️ Timed out waiting for Render deployment"
          exit 1

      - name: Mark Deployment as Successful on GitHub
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.DEPLOY_PAT }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          state: success

      - name: Mark Deployment as Failed on GitHub
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.DEPLOY_PAT }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          state: failure
